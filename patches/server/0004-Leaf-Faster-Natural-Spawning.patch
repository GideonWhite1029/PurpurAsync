From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: GideonWhite1029 <gideonwhite1029@gmail.com>
Date: Wed, 1 May 2024 19:16:50 +0400
Subject: [PATCH] Leaf: Faster Natural Spawning


diff --git a/src/main/java/net/minecraft/util/RandomSource.java b/src/main/java/net/minecraft/util/RandomSource.java
index 9c6f5b55b1f1376fa75e216cd366ee47c79fafc4..1ccd1833f422b6e99ccc6dd8610fcf9a001fb754 100644
--- a/src/main/java/net/minecraft/util/RandomSource.java
+++ b/src/main/java/net/minecraft/util/RandomSource.java
@@ -15,6 +15,12 @@ public interface RandomSource {
         return create(RandomSupport.generateUniqueSeed());
     }
 
+    // PurpurAsync start - Generate random seed faster
+    static RandomSource createFaster() {
+        return create(RandomSupport.generateFasterSeed());
+    }
+    // PurpurAsync end
+
     @Deprecated
     static RandomSource createThreadSafe() {
         return new ThreadSafeLegacyRandomSource(RandomSupport.generateUniqueSeed());
diff --git a/src/main/java/net/minecraft/world/level/Level.java b/src/main/java/net/minecraft/world/level/Level.java
index 5057d9d433ba002a22d22adfaf7323b2cfaee9af..08b5be2cc7600b4be6e75e31dc738d019ee8efe8 100644
--- a/src/main/java/net/minecraft/world/level/Level.java
+++ b/src/main/java/net/minecraft/world/level/Level.java
@@ -130,6 +130,7 @@ public abstract class Level implements LevelAccessor, AutoCloseable, ca.spottedl
     protected float oThunderLevel;
     public float thunderLevel;
     public final RandomSource random = RandomSource.create();
+    public final RandomSource randomFaster = RandomSource.createFaster(); // PurpurAsync - Generate random seed faster
     /** @deprecated */
     @Deprecated
     private final RandomSource threadSafeRandom = RandomSource.createThreadSafe();
diff --git a/src/main/java/net/minecraft/world/level/NaturalSpawner.java b/src/main/java/net/minecraft/world/level/NaturalSpawner.java
index 061706ee732f9809d6b73305c14871257af8305e..3fac3f6ae1412dc047298c1751a3dd560783a545 100644
--- a/src/main/java/net/minecraft/world/level/NaturalSpawner.java
+++ b/src/main/java/net/minecraft/world/level/NaturalSpawner.java
@@ -410,10 +410,11 @@ public final class NaturalSpawner {
 
     private static BlockPos getRandomPosWithin(Level world, LevelChunk chunk) {
         ChunkPos chunkcoordintpair = chunk.getPos();
-        int i = chunkcoordintpair.getMinBlockX() + world.random.nextInt(16);
-        int j = chunkcoordintpair.getMinBlockZ() + world.random.nextInt(16);
+        // PurpurAsync start - Generate random seed faster
+        int i = chunkcoordintpair.getMinBlockX() + world.randomFaster.nextInt(16);
+        int j = chunkcoordintpair.getMinBlockZ() + world.randomFaster.nextInt(16);
         int k = chunk.getHeight(Heightmap.Types.WORLD_SURFACE, i, j) + 1;
-        int l = Mth.randomBetweenInclusive(world.random, world.getMinBuildHeight(), k);
+        int l = Mth.randomBetweenInclusive(world.randomFaster, world.getMinBuildHeight(), k);  // PurpurAsync end
 
         return new BlockPos(i, l, j);
     }
diff --git a/src/main/java/net/minecraft/world/level/levelgen/RandomSupport.java b/src/main/java/net/minecraft/world/level/levelgen/RandomSupport.java
index 4327bee689e986561d126d6018d3fee7d2623176..cf3c31eca0656447b6ef1433418a2ba6a3898d8f 100644
--- a/src/main/java/net/minecraft/world/level/levelgen/RandomSupport.java
+++ b/src/main/java/net/minecraft/world/level/levelgen/RandomSupport.java
@@ -5,6 +5,8 @@ import com.google.common.base.Charsets;
 import com.google.common.hash.HashFunction;
 import com.google.common.hash.Hashing;
 import com.google.common.primitives.Longs;
+
+import java.util.concurrent.ThreadLocalRandom;
 import java.util.concurrent.atomic.AtomicLong;
 
 public final class RandomSupport {
@@ -41,6 +43,12 @@ public final class RandomSupport {
         return SEED_UNIQUIFIER.updateAndGet(seedUniquifier -> seedUniquifier * 1181783497276652981L) ^ System.nanoTime();
     }
 
+    // PurpurAsync start - Generate random seed faster
+    public static long generateFasterSeed() {
+        return SEED_UNIQUIFIER.updateAndGet((seedUniquifier) -> seedUniquifier * 1181783497276652981L) ^ ThreadLocalRandom.current().nextLong();
+    }
+    // PurpurAsync end
+
     public static record Seed128bit(long seedLo, long seedHi) {
         public RandomSupport.Seed128bit xor(long seedLo, long seedHi) {
             return new RandomSupport.Seed128bit(this.seedLo ^ seedLo, this.seedHi ^ seedHi);
